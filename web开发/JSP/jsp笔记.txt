1.javaServer pages(JSP)
===========================================
2.所有程序操作都在服务器端执行，网络上传送给客户端的仅是得到的结果，这样大大降低了对客户浏览器的要求，即使客户浏览器端不支持java，也可以访问jsp网页。
================================================================
3.HTML语法的java扩展，加入新的标签(<% %>,...).
================================================================
4.JSP最终都会转化为Servlet去执行
==============================================================
5.JSP的声明格式：<%! int a = 3;%>,脚本段的形式：<% int b = 3;%>,当服务器将JSP转化为Servlet时，会将JSP中的声明转化为类的成员变量，而将脚本段转化为方法中的局部变量，Servlet是单实例的，这样成员变量的值就只有一个，每个用户都会去访问到它，而脚本段中的值则是局部变量，每个用户访问的时候各有一份，互不影响。
====================================================================
6.<jsp:forward>指令用于转向页面，在该指令后面的所有代码都没有机会执行了，因为页面的流程已经转向了另外一个页面了。
====================================================================
7.jsp页面接收参数的方法：String userName = request.getParameter("userName");
===================================================================
8.getParameter方法是getParameterValues方法的特例，表示请求参数值只有一个，如果请求参数值有多个，请使用getParameterValues方法。在多选框的情况下，需要使用getParaameterValues方法来获取用户所选择的多个复选框的值。
======================================================================
9.request的setAttribute与getAttribute方法一般都是成对出现的，首先通过setAttribute方法设置属性与属性值，然后通过getAttrbute方法根据属性获取到与该属性对应的对象值(获取到之后一般都要进行向下类型转换，将属性值转化为真正的对象)。setAttribute与getAttribute方法都是在服务器端内部执行的，客户端不知道服务器端是否执行过这两个方法。
========================================================================
10.request的getParameter方法的作用是获取到客户端通过表单或url请求参数所发送过来的参数值，是客户端与服务器之间的交互，服务器端要想获取到客户端发送过来的数据，就需要使用getParameter方法来获取。没有与getParameter方法对应的setParameter方法。
=======================================================================
11.request对象内数据的存活范围就是在request对象的存活范围内，当客户端向服务器端发送一个请求，服务器向客户端返回一个响应后，该请求对象就被销毁了；之后再向服务器端发送新的请求时，服务器会创建新的request对象，该request对象与之前的request对象没有任何关系，因此也无法获得在之前的request对象中所存放的任何数据。
===========================================================================12.session对象内数据的存活范围也就是session对象的存活范围(只要浏览器不关闭，session对象就会一直存在)，因此在同一个浏览器窗口中，无论向服务器端发送多少个请求，session对象只有一个。
=====================================================================
13.application(应用对象):存活范围最大的对象，只要服务器没有关闭，application对象中的数据就会一直存在。在整个服务器运行过程当中，application对象只要一个。
===========================================================================
14.request、session、以及application这3个对象的范围是逐个增加的：request只在一个请求的范围内；session是在浏览器窗口的范围内；application则是在整个服务器的运行过程中。
===========================================================================
15.application.getRealPath(" ")方法会返回资源在服务器上的绝对路径。
===========================================================================
16.HttpServletResponse对象的sendRedirect(String location)方法称作重定向。如果location地址前面加上“/”,则表示相对于Servlet容器的根来请求，即http://localhost:8080,如果location地址前没有加上“/”，则表示相对于当前请求的url来寻求地址。
=========================================================================
17.RequestDispatcher的forward(request,response)称作请求转发。
======================================================================
18.请求转发与重定向的区别
a.请求转发，整个过程处于同一个请求当中。
b.重定向。实际上客户端会向服务器端发送两个请求。
c.RequestDispatcher是通过调用HttpServletRequest对象的getRequestDispatcher()方法得到的，是属于请求对象的方法。
d.sendRedirect()是HttpServletResponse对象的方法，即响应的对象的方法，既然调用了响应对象的方法，那就表明整个请求过程已经结束了，服务器开始向客户端返回执行的结果。
========================================================================


