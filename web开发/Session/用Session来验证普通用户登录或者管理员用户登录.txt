用session来验证普通用户登录或者管理员用户登录，普通用户：用户名：zhangsan，密码123.管理员用户：用户名lisi，密码456.当用户名不对时，重新输入.普通用户进入没有update权限，管理员用户登录有update权限。
====================================================
1.Jsp代码：login.jsp
    <form action="LoginUserServlet" method="post">
    	username:<input type="text" name="username"><br>
    	password:<input type="password" name="password"><br>
    	authority:
    	<select name="authority">
    		<option value="1">普通用户</option>
    		<option value="2">管理员</option>
    	</select><br>
    <input type="submit" value="submit">
    </form>
=================================================
2.UserLoginServlet.java代码：
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		String username = (String)req.getParameter("username");
		String password =(String)req.getParameter("password");
		String authority = (String)req.getParameter("authority");
		
		User user = new User();
		HttpSession session = req.getSession();
		if("1".equals(authority)){
			//普通用户登录
			if("zhangsan".equals(username) && "123".equals(password)){
				//将用户信息放置到session中
				user.setUsername(username);
				user.setPassword(password);
				user.setAuthority(authority);
				session.setAttribute("user",user);
				req.getRequestDispatcher("/session/index.jsp").forward(req,resp);
			}else{
				req.getRequestDispatcher("/session/login.jsp").forward(req,resp);
			}
		}else 
		if("2".equals(authority)){
			//管理员身份登录
			if("lisi".equals(username) && "456".equals(password)){
				//将用户信息放置到session中
				user.setUsername(username);
				user.setPassword(password);
				user.setAuthority(authority);
				session.setAttribute("user",user);
				req.getRequestDispatcher("/session/index.jsp").forward(req,resp);
			}else{
				req.getRequestDispatcher("/session/login.jsp").forward(req,resp);
			}
		} else{
			//登录错误
			req.getRequestDispatcher("/session/login.jsp").forward(req,resp);
		}
	}
=======================================================================
3.User类：主要用javabean实现，用来存放用户和密码
public class User {

	private String username;
	private String password;
	private String authority;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getAuthority() {
		return authority;
	}
	public void setAuthority(String authority) {
		this.authority = authority;
	}
}
================================================================
4.index.jsp代码:用来显示登录成功后的界面
  <body>
   	<a href="Query">Query</a>
   	<%if(((User)session.getAttribute("user")).getAuthority().equals("2")){%>
   	<a href="Update">Update</a>
   	<%} %>
  </body>
=================================================================
5.Query.java代码：用来确定普通用户登录成功
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session = req.getSession();
		if(null == session.getAttribute("user")){
			resp.sendRedirect("/session/login.jsp");
			return;
		}
		System.out.println("ok");
	}
================================================================
6.Update.java代码：用来确定管理员用户登录成功
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		HttpSession session = req.getSession();
		if(null == session.getAttribute("user")){
			resp.sendRedirect("/session/login.jsp");
			return;
		}
		User user = (User)session.getAttribute("user");
		if("1".equals(user.getAuthority())){
			System.out.println("fail");
		}else{
			System.out.println("ok");
		}
	}