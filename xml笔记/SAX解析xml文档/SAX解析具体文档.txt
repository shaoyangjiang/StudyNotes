/**
 * 用SAX解析XMl文档
 * @author Administrator
 *
 */
public class SaxTest2 {

	public static void main(String[] args) throws Exception {
		//step1:获得SAX解析器工厂实例；
		SAXParserFactory factory = SAXParserFactory.newInstance();
		//step2:获得SAX解析器实例；
		SAXParser parser = factory.newSAXParser();
		//step3:开始进行解析；
		parser.parse(new File("student.xml"), new MyHandler2());
	}
}

class MyHandler2 extends DefaultHandler{
	//栈
	private Stack<String> stack = new Stack<String>();
	private String name;
	private String gender;
	private String age;
	
	@Override
	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {
		stack.push(qName);//把元素名称放入栈里
		//获得所用属性
		for(int i = 0;i <attributes.getLength();i++){
			String attrName = attributes.getQName(i);
			String attrValue = attributes.getValue(i);
			System.out.println(attrName+"="+attrValue);
		}
	}
	
	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {
		String tag = stack.peek();//得到栈的元素
		if("姓名".equals(tag)){
			name = new String(ch,start,length);//分别存放到数组里
		} else if("性别".equals(tag)){
			gender = new String(ch,start,length);
		} else if("年龄".equals(tag)){
			age = new String(ch,start,length);
		}
	}
	
	@Override
	public void endElement(String uri, String localName, String qName)
			throws SAXException {
		stack.pop();//表示该元素已经解析完毕，需要从栈中弹出
		//得到所有的值
		if("学生".equals(qName)){
			System.out.println("name:"+name);
			System.out.println("gender:"+gender);
			System.out.println("age:"+age);
			System.out.println("---------------------------------");
		}
	}
}
====================================================================
运行结果：
学号=1
name:张三
gender:男
age:20
---------------------------------
学号=2
name:李四
gender:女
age:19
---------------------------------
学号=3
name:王五
gender:男
age:21
---------------------------------
