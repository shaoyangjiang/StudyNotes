★ 判断奇偶性，要用余数是0来判断：
i % 2 == 0 ? "偶数" : 奇数"";
-----------------------------------------------------------------------------------
★ int 转成 long 时[如果右边超出int范围]：
long dis2 -= LIGHT_SPEED * 60L * 8;
--------------------------------------------------------------------------------
★- 构造代码块：
在类中没有前缀或后缀，并用“{}”括起来的代码片段
//每个构造函数的最前端都被插入了构造代码块(如果构造遇到this关键字时则不插入构造代码块)
public class Client {
{
// 构造代码块[精简代码]
System.out.println(" 执行构造代码块");
}
public Client(){
System.out.println(" 执行无参构造");
}
public Client(String _str){
System.out.println(" 执行有参构造");
}
}
等同于：
public class Client {
public Client(){
System.out.println(" 执行构造代码块");
System.out.println(" 执行无参构造");}
public Client(String _str){
System.out.println(" 执行构造代码块");
System.out.println(" 执行有参构造");}
}
用于初始化实例变量或初始化实力环境
--------------------------------------------------------------------------------
★ - 覆写toString()方法(如果不覆写->“类名 + @ + hashCode”)：
public String toString(){
return String.format("%s.name=%s",this.getClass(),name);
}
------------------------------------------------------------------------------------
★ - 尽量使用移位来代替a*b或a/b的操作(左移*2^n，右移/2^n)
int num = a / 4; int num = a / 8;应该改为
int num = a>> 2; int num = a >> 3;  //a/(2^2)、a/(2^3)

int num = a * 4; int num = a * 8;应该改为
int num = a << 2; int num = a << 3;  //a*(2^2)、a*(2^3)
-----------------------------------------------------------------------------------
★ - 尽量使用System.arraycopy（）代替通过来循环复制数组
System.arraycopy（）要比通过循环来复制数组快的多。
-----------------------------------------------------------------------------------





